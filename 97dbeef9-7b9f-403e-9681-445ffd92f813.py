# In[ ]:
import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler

# In[ ]:
df = pd.read_csv("/content/car_sales.csv")

# In[ ]:
# https://www.kaggle.com/datasets/missionjee/car-sales-report

#dataset link

# In[ ]:
df.head()

# In[ ]:
df.tail()

# In[ ]:
df.shape

# In[ ]:
df.isna().sum()

# In[ ]:
df.duplicated().sum()

# In[ ]:
df.dtypes

# In[ ]:
df.info()

# In[ ]:
df.describe()

# In[ ]:
df.columns

# In[ ]:
df.rename(columns={"Price ($)":"price", "Annual Income":"annual_income", 'Body Style':"body_style", 'Customer Name':'customer_name'}, inplace =True)

# In[ ]:
#min price
min_price = df.price.min()
print("The Minimum Price:" "$" +str(min_price))

# In[ ]:
#max price
max_price = df.price.max()
print("The Maximum Price:" "$" +str(max_price))

# In[ ]:
#average price
average_price = df.price.mean()
print(f"The Average Price: ${round(average_price)}")

# In[ ]:
#What is the total revenue generated by each dealer?

total_sales_by_dealer = df.groupby('Dealer_Name').agg(total_revenue = ("price",'sum'))

total_sales_by_dealer.sort_values(by ="total_revenue", ascending =False).total_revenue.nlargest(10)

# In[ ]:
#What is the average price of cars sold by each dealer?

average_car_price_sold =  df.groupby('Dealer_Name').agg(average_price = ("price",'mean'))
average_car_price_sold.sort_values('average_price', ascending =False).average_price.nlargest(10)

# In[ ]:
#What is the average price of cars sold by each dealer?

average_car_price_sold =  df.groupby('Dealer_Name').agg(average_price = ("price",'mean'))
average_car_price_sold.average_price.nlargest(10)

# In[ ]:
# What is the gender distribution of customers?
genders = df.Gender.value_counts()
genders


# gen = df.groupby('Gender')['Gender'].count()
# gen

# In[ ]:
#What is the distribution of customers based on the dealer regions?


# dealer_region_dist = df.groupby('Dealer_Region')['Dealer_Region'].count()
# dealer_region_dist

dealer_region_dist =  df.Dealer_Region.value_counts()
dealer_region_dist



# In[ ]:
#What is the average annual income of customers?
avg_annual_income = df.annual_income.mean()
print("The average income overall:",avg_annual_income.round())

# In[ ]:
#What are the top 5 most popular car models?

top_5_model = df.Model.value_counts().nlargest(5)
print("Top Model:",top_5_model)

# top_5_model = df.groupby('Model').Model.count().nlargest(5)
# print("Top Model:",top_5_model)

# In[ ]:
#Which company has the highest sales volume?

highest_sales_company = df.Company.value_counts().nlargest(1)

# highest_sales_company = df.groupby('Company').agg(highest_sales = ('Company','count')).highest_sales.nlargest(1)

highest_sales_company

# In[ ]:
#What is the average price of cars from each company?

avg_price_car_comp =  df.groupby('Company').agg(average_price_car = ('price','mean')).average_price_car.nlargest(10)
avg_price_car_comp.round()


# avg_price_car_comp =  df.groupby('Company').agg(average_price_car = ('price','mean'))
# avg_price_car_comp.round().sort_values(by = "average_price_car", ascending =False)

# In[ ]:


# In[ ]:
#Which dealer region has the highest sales revenue

dealer_region_high_sales = df.groupby("Dealer_Region").agg(total_sales = ('price','sum'))
dealer_region_high_sales.sort_values(by = 'total_sales', ascending= False)

# In[ ]:
#What is the sales performance comparison between different dealer regions

sales_performance_com =  df.groupby('Dealer_Region').agg(total_sales = ('price','sum'), average_sales = ('price','mean'), number_of_sales = ("Car_id",'count'))
sales_performance_com
# sales_performance_com.unstack()

# In[ ]:
df.head()

# In[ ]:
#How does the average car price vary across different regions

avg_car_price_region = df.groupby('Dealer_Region').agg(average_price =  ('price','mean'))
avg_car_price_region.round()

# In[ ]:
#What is the distribution of engine types among sold cars?
distribution_engine = df.Engine.value_counts()
distribution_engine

# In[ ]:
#What percentage of cars sold have automatic vs. manual transmission?

automatic_manual = df.Transmission.value_counts()
print(automatic_manual)
total = automatic_manual.sum()
print("")
find_percentage = (automatic_manual / total)*100
find_percentage

# In[ ]:
#What are the top 3 most popular car colors
popular_car_color = df.Color.value_counts().nlargest(3)
popular_car_color

# In[ ]:
#What is the distribution of body styles among sold cars?
body_style_dist = df.body_style.value_counts()
body_style_dist

# In[ ]:
df.head()

# In[ ]:


# In[ ]:
#What is the total number of sales made by each dealer?
each_dealer = df.groupby("Dealer_Name").agg(total_sales = ("price", 'sum'))
each_dealer.sort_values(by ="total_sales", ascending=False)

# In[ ]:
#Which dealer has the highest average sales price
each_dealer_avg= df.groupby("Dealer_Name").agg(avg_Sales = ("price", 'mean'))
each_dealer_avg.sort_values(by ="avg_Sales", ascending=False)

# In[ ]:


